{"ast":null,"code":"import _classCallCheck from \"/home/moss/Desktop/Rockmetric_ReactJS/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/moss/Desktop/Rockmetric_ReactJS/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/moss/Desktop/Rockmetric_ReactJS/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/moss/Desktop/Rockmetric_ReactJS/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/moss/Desktop/Rockmetric_ReactJS/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/moss/Desktop/Rockmetric_ReactJS/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/moss/Desktop/Rockmetric_ReactJS/src/ModalBox.js\";\nimport React from 'react';\nimport { Form, FormGroup, ControlLabel, FormControl, HelpBlock, Checkbox, Radio, FieldGroup, Grid, Row, Col, Tooltip, Button, OverlayTrigger, Popover, Modal } from 'react-bootstrap';\nimport './App.css';\n\nvar ModalBox =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ModalBox, _React$Component);\n\n  function ModalBox(props, context) {\n    var _this;\n\n    _classCallCheck(this, ModalBox);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ModalBox).call(this, props, context));\n    _this.handleShow = _this.handleShow.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClose = _this.handleClose.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      show: false\n    };\n    return _this;\n  }\n\n  _createClass(ModalBox, [{\n    key: \"handleClose\",\n    value: function handleClose() {\n      this.setState({\n        show: false\n      });\n    }\n  }, {\n    key: \"handleShow\",\n    value: function handleShow() {\n      this.setState({\n        show: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var popover = React.createElement(Popover, {\n        id: \"modal-popover\",\n        title: \"popover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"very popover. such engagement\");\n      var tooltip = React.createElement(Tooltip, {\n        id: \"modal-tooltip\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"wow.\");\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Click to get the full Modal experience!\"), React.createElement(Button, {\n        bsStyle: \"primary\",\n        bsSize: \"large\",\n        onClick: this.handleShow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Launch demo modal\"), React.createElement(Modal, {\n        show: this.state.show,\n        onHide: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        closeButton: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Modal.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Modal heading\")), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla.\"), React.createElement(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Close\"))));\n    }\n  }]);\n\n  return ModalBox;\n}(React.Component);\n\nexport default ModalBox;","map":{"version":3,"sources":["/home/moss/Desktop/Rockmetric_ReactJS/src/ModalBox.js"],"names":["React","Form","FormGroup","ControlLabel","FormControl","HelpBlock","Checkbox","Radio","FieldGroup","Grid","Row","Col","Tooltip","Button","OverlayTrigger","Popover","Modal","ModalBox","props","context","handleShow","bind","handleClose","state","show","setState","popover","tooltip","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,IADF,EAEEC,SAFF,EAGEC,YAHF,EAIEC,WAJF,EAKEC,SALF,EAMEC,QANF,EAOEC,KAPF,EAQEC,UARF,EASEC,IATF,EAUEC,GAVF,EAWEC,GAXF,EAYEC,OAZF,EAaEC,MAbF,EAcEC,cAdF,EAeEC,OAfF,EAgBEC,KAhBF,QAiBO,iBAjBP;AAkBA,OAAO,WAAP;;IAEMC,Q;;;;;AACF,oBAAYC,KAAZ,EAAmBC,OAAnB,EAA4B;AAAA;;AAAA;;AAC1B,kFAAMD,KAAN,EAAaC,OAAb;AAEA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,uDAAlB;AACA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBD,IAAjB,uDAAnB;AAEA,UAAKE,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AADK,KAAb;AAN0B;AAS3B;;;;kCAEa;AACZ,WAAKC,QAAL,CAAc;AAAED,QAAAA,IAAI,EAAE;AAAR,OAAd;AACD;;;iCAEY;AACX,WAAKC,QAAL,CAAc;AAAED,QAAAA,IAAI,EAAE;AAAR,OAAd;AACD;;;6BAEQ;AACP,UAAME,OAAO,GACX,oBAAC,OAAD;AAAS,QAAA,EAAE,EAAC,eAAZ;AAA4B,QAAA,KAAK,EAAC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADF;AAKA,UAAMC,OAAO,GAAG,oBAAC,OAAD;AAAS,QAAA,EAAE,EAAC,eAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAhB;AAEA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDADF,EAGE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAA0B,QAAA,MAAM,EAAC,OAAjC;AAAyC,QAAA,OAAO,EAAE,KAAKP,UAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAHF,EAOE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAE,KAAKG,KAAL,CAAWC,IAAxB;AAA8B,QAAA,MAAM,EAAE,KAAKF,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CADF,EAIE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sMAJF,EAWE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKA,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CAXF,CAPF,CADF;AAyBD;;;;EArDkBtB,KAAK,CAAC4B,S;;AAwD3B,eAAeX,QAAf","sourcesContent":["import React from 'react';\nimport {\n  Form,\n  FormGroup,\n  ControlLabel,\n  FormControl,\n  HelpBlock,\n  Checkbox,\n  Radio,\n  FieldGroup,\n  Grid,\n  Row,\n  Col,\n  Tooltip,\n  Button,\n  OverlayTrigger,\n  Popover,\n  Modal,\n} from 'react-bootstrap';\nimport './App.css';\n\nclass ModalBox extends React.Component {\n    constructor(props, context) {\n      super(props, context);\n  \n      this.handleShow = this.handleShow.bind(this);\n      this.handleClose = this.handleClose.bind(this);\n  \n      this.state = {\n        show: false\n      };\n    }\n  \n    handleClose() {\n      this.setState({ show: false });\n    }\n  \n    handleShow() {\n      this.setState({ show: true });\n    }\n  \n    render() {\n      const popover = (\n        <Popover id=\"modal-popover\" title=\"popover\">\n          very popover. such engagement\n        </Popover>\n      );\n      const tooltip = <Tooltip id=\"modal-tooltip\">wow.</Tooltip>;\n  \n      return (\n        <div>\n          <p>Click to get the full Modal experience!</p>\n  \n          <Button bsStyle=\"primary\" bsSize=\"large\" onClick={this.handleShow}>\n            Launch demo modal\n          </Button>\n  \n          <Modal show={this.state.show} onHide={this.handleClose}>\n            <Modal.Header closeButton>\n              <Modal.Title>Modal heading</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n\n                Aenean lacinia bibendum nulla sed consectetur. Praesent commodo\n                cursus magna, vel scelerisque nisl consectetur et. Donec sed odio\n                dui. Donec ullamcorper nulla non metus auctor fringilla.\n              \n            </Modal.Body>\n            <Modal.Footer>\n              <Button onClick={this.handleClose}>Close</Button>\n            </Modal.Footer>\n          </Modal>\n        </div>\n      );\n    }\n  }\n\n  export default ModalBox; "]},"metadata":{},"sourceType":"module"}